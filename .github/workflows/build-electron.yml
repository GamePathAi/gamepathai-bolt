name: Build & Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build for Windows
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Build com Electron
        run: npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: |
            dist/**/*.exe
            dist/**/*.msi
          retention-days: 5

  build-mac:
    runs-on: macos-latest
    name: Build for macOS
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Build com Electron
        run: npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: |
            dist/**/*.dmg
            dist/**/*.pkg
          retention-days: 5

  build-linux:
    runs-on: ubuntu-latest
    name: Build for Linux
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Build com Electron
        run: npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: |
            dist/**/*.AppImage
            dist/**/*.deb
            dist/**/*.rpm
            dist/**/*.snap
          retention-days: 5

  release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest
    name: Create GitHub Release
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Publicar Release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.exe
            artifacts/**/*.msi
            artifacts/**/*.dmg
            artifacts/**/*.pkg
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.snap
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
