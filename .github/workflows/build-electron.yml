name: Build & Release Electron App
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write # Garante permissões para criar releases
  
jobs:
  build-windows:
    runs-on: windows-latest
    name: Build for Windows
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      # Modificar temporariamente o package.json para evitar problemas com dependências nativas
      - name: Configurar para build
        shell: pwsh
        run: |
          $packageJson = Get-Content -Path package.json -Raw | ConvertFrom-Json
          $packageJson.build.publish = @(@{provider="github"; owner="GamePathAi"; repo="gamepathai-bolt"; private=$false})
          $packageJson | ConvertTo-Json -Depth 100 | Set-Content -Path package.json
          Get-Content -Path package.json
          
      - name: Build com Electron
        run: npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: "true"
          USE_HARD_LINKS: "false"

      - name: Verificar saída do build
        run: |
          dir dist-electron || echo "dist-electron não existe!"
          dir dist || echo "dist não existe!"
          echo "Buscando arquivos .exe:"
          where /r . *.exe

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist-electron/**/*.exe
            dist-electron/**/*.msi
          retention-days: 5
          if-no-files-found: warn

  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    name: Create GitHub Release
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: artifacts/windows

      - name: Display artifacts structure
        run: |
          echo "Verificando estrutura dos artefatos:"
          find artifacts -type f | sort
          echo "Tamanho dos arquivos:"
          du -h artifacts/*/*

      - name: Criar release no GitHub
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/windows/**/*.exe
            artifacts/windows/**/*.msi
          generate_release_notes: true
          draft: false
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}